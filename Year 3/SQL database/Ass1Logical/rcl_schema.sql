-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-09-18 10:35:05 AEST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c

-- Capture run of script in file called rcl_schema_output.txt
set echo on
SPOOL rcl_schema_output.txt

--student id: 33095000
--student names: Natalie Chan
    
--student id: 34039805
--student names: Daniel Siahaan

--student id: 33155917
--student names: Ryan Hicks


DROP TABLE agency_branch CASCADE CONSTRAINTS;

DROP TABLE author CASCADE CONSTRAINTS;

DROP TABLE book_copy CASCADE CONSTRAINTS;

DROP TABLE borrower CASCADE CONSTRAINTS;

DROP TABLE borrower_class CASCADE CONSTRAINTS;

DROP TABLE catalogue CASCADE CONSTRAINTS;

DROP TABLE catalogue_author CASCADE CONSTRAINTS;

DROP TABLE catalogue_isbn CASCADE CONSTRAINTS;

DROP TABLE catalogue_subject CASCADE CONSTRAINTS;

DROP TABLE isbn CASCADE CONSTRAINTS;

DROP TABLE loan CASCADE CONSTRAINTS;

DROP TABLE local_government_agency CASCADE CONSTRAINTS;

DROP TABLE manager CASCADE CONSTRAINTS;

DROP TABLE publisher CASCADE CONSTRAINTS;

DROP TABLE reserve CASCADE CONSTRAINTS;

DROP TABLE subject CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE agency_branch (
    branch_code    NUMBER(3) NOT NULL,
    branch_name    VARCHAR2(50) NOT NULL,
    branch_address VARCHAR2(50) NOT NULL,
    branch_phone   CHAR(10) NOT NULL,
    lga_code       NUMBER(4) NOT NULL,
    manager_id     NUMBER(4) NOT NULL
);

COMMENT ON COLUMN agency_branch.branch_code IS
    'Unique identifier of the LGA branch.';

COMMENT ON COLUMN agency_branch.branch_name IS
    'Name of the LGA branch.';

COMMENT ON COLUMN agency_branch.branch_address IS
    'Address of the LGA branch.';

COMMENT ON COLUMN agency_branch.branch_phone IS
    'Main service phone number of the LGA branch.';

COMMENT ON COLUMN agency_branch.lga_code IS
    'Unique identifier of the Local Government Agency.';

COMMENT ON COLUMN agency_branch.manager_id IS
    'Unique identifier of the manager.';

ALTER TABLE agency_branch ADD CONSTRAINT agency_branch_pk PRIMARY KEY ( branch_code );

CREATE TABLE author (
    author_id    NUMBER(4) NOT NULL,
    author_fname VARCHAR2(50) NOT NULL,
    author_lname VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN author.author_id IS
    'Unique identifier of the author.';

COMMENT ON COLUMN author.author_fname IS
    'First name of the author.';

COMMENT ON COLUMN author.author_lname IS
    'Last name of the author.';

ALTER TABLE author ADD CONSTRAINT author_pk PRIMARY KEY ( author_id );

CREATE TABLE book_copy (
    book_copy_id              NUMBER(4) NOT NULL,
    book_purchase_price       NUMBER(4, 2) NOT NULL,
    book_counter_reserve_flag CHAR(1) NOT NULL,
    cat_call_no               CHAR(30) NOT NULL,
    branch_code               NUMBER(3) NOT NULL,
    book_loan_status          CHAR(1) NOT NULL,
    book_condition            CHAR(1)
);

ALTER TABLE book_copy
    ADD CONSTRAINT reserve_flag CHECK ( book_counter_reserve_flag IN ( 'N', 'Y' ) );

ALTER TABLE book_copy
    ADD CONSTRAINT book_loan_status CHECK ( book_loan_status IN ( 'A', 'L', 'R' ) );

ALTER TABLE book_copy
    ADD CONSTRAINT book_condition CHECK ( book_condition IN ( 'D', 'L', 'S' ) );

COMMENT ON COLUMN book_copy.book_copy_id IS
    'Unique identifier of a book copy in a branch.';

COMMENT ON COLUMN book_copy.book_purchase_price IS
    'Price of the book.';

COMMENT ON COLUMN book_copy.book_counter_reserve_flag IS
    'Indicator if the book is currently reserved.';

COMMENT ON COLUMN book_copy.cat_call_no IS
    'Call number of the catalogue that contains Dewey Decimal Classification.';

COMMENT ON COLUMN book_copy.branch_code IS
    'Unique identifier of the LGA branch.';

COMMENT ON COLUMN book_copy.book_loan_status IS
    'Loan status of the book copy.';

COMMENT ON COLUMN book_copy.book_condition IS
    'Condition of the book copy.';

CREATE UNIQUE INDEX book_copy__idx ON
    book_copy (
        branch_code
    ASC );

ALTER TABLE book_copy ADD CONSTRAINT book_copy_pk PRIMARY KEY ( book_copy_id,
                                                                branch_code );

CREATE TABLE borrower (
    borrower_no      NUMBER(4) NOT NULL,
    borrower_fname   VARCHAR2(50) NOT NULL,
    borrower_lname   VARCHAR2(50) NOT NULL,
    borrower_address VARCHAR2(50) NOT NULL,
    borrower_status  CHAR(1) NOT NULL,
    class_id         NUMBER(4) NOT NULL,
    branch_code      NUMBER(3) NOT NULL
);

ALTER TABLE borrower
    ADD CONSTRAINT borrower_status CHECK ( borrower_status IN ( 'B', 'P' ) );

COMMENT ON COLUMN borrower.borrower_no IS
    'Unique identifier of the borrower.';

COMMENT ON COLUMN borrower.borrower_fname IS
    'First name of the borrower.';

COMMENT ON COLUMN borrower.borrower_lname IS
    'Last name of the borrower.';

COMMENT ON COLUMN borrower.borrower_address IS
    'Address of the borrower.';

COMMENT ON COLUMN borrower.borrower_status IS
    'Borrowing status of the borrower.';

COMMENT ON COLUMN borrower.class_id IS
    'Unique identifier of the borrower class.';

COMMENT ON COLUMN borrower.branch_code IS
    'Unique identifier of the LGA branch.';

ALTER TABLE borrower ADD CONSTRAINT borrower_pk PRIMARY KEY ( borrower_no );

CREATE TABLE borrower_class (
    class_id              NUMBER(4) NOT NULL,
    class_name            VARCHAR2(50) NOT NULL,
    class_std_loan_period NUMBER(2) NOT NULL,
    class_max_books       NUMBER(1) NOT NULL
);

COMMENT ON COLUMN borrower_class.class_id IS
    'Unique identifier of the borrower class.';

COMMENT ON COLUMN borrower_class.class_name IS
    'Name of the borrower class.';

COMMENT ON COLUMN borrower_class.class_std_loan_period IS
    'Standard number of days a book can be borrowed by a borrower in the class.';

COMMENT ON COLUMN borrower_class.class_max_books IS
    'Maximum number of books can be borrowed at a time by a borrower in the class.';

ALTER TABLE borrower_class ADD CONSTRAINT borrower_class_pk PRIMARY KEY ( class_id );

CREATE TABLE catalogue (
    cat_call_no          CHAR(30) NOT NULL,
    cat_title            VARCHAR2(50) NOT NULL,
    cat_content          VARCHAR2(1000) NOT NULL,
    cat_classification   VARCHAR2(1) NOT NULL,
    cat_no_pages         NUMBER(4) NOT NULL,
    cat_reading_level    NUMBER(2),
    cat_publication_year DATE NOT NULL,
    publisher_id         NUMBER(4) NOT NULL,
    cat_lang             VARCHAR2(2) NOT NULL,
    cat_description      VARCHAR2(50) NOT NULL,
    cat_edition          NUMBER(2),
    cat_note             VARCHAR2(100)
);

ALTER TABLE catalogue
    ADD CHECK ( cat_classification IN ( 'F', 'R' ) );

ALTER TABLE catalogue
    ADD CONSTRAINT reading_difficulty_level CHECK ( cat_reading_level BETWEEN 1 AND 30 );

COMMENT ON COLUMN catalogue.cat_call_no IS
    'Call number of the catalogue that contains Dewey Decimal Classification.';

COMMENT ON COLUMN catalogue.cat_title IS
    'Title of the catalogue.';

COMMENT ON COLUMN catalogue.cat_content IS
    'Description of books related in the catalogue.';

COMMENT ON COLUMN catalogue.cat_classification IS
    'Classify catalogue as Reference or Fiction.';

COMMENT ON COLUMN catalogue.cat_no_pages IS
    'Total number of pages in the catalogue.';

COMMENT ON COLUMN catalogue.cat_reading_level IS
    'Reading difficulty level from (1) Easy to (30) Very Difficult.';

COMMENT ON COLUMN catalogue.cat_publication_year IS
    'The year the book in the catalogue was published.';

COMMENT ON COLUMN catalogue.publisher_id IS
    'Unique identifier of the publisher.';

COMMENT ON COLUMN catalogue.cat_lang IS
    'Language that is used by the book in the catalogue.';

COMMENT ON COLUMN catalogue.cat_description IS
    'Description of the catalogue.';

COMMENT ON COLUMN catalogue.cat_edition IS
    'Edition of the catalogue.';

COMMENT ON COLUMN catalogue.cat_note IS
    'Additional note for the catalogue.';

ALTER TABLE catalogue ADD CONSTRAINT catalogue_pk PRIMARY KEY ( cat_call_no );

CREATE TABLE catalogue_author (
    cat_call_no CHAR(30) NOT NULL,
    author_id   NUMBER(4) NOT NULL
);

COMMENT ON COLUMN catalogue_author.cat_call_no IS
    'Call number of the catalogue that contains Dewey Decimal Classification.';

COMMENT ON COLUMN catalogue_author.author_id IS
    'Unique identifier of the author.';

ALTER TABLE catalogue_author ADD CONSTRAINT catalogue_author_pk PRIMARY KEY ( cat_call_no,
                                                                              author_id );

CREATE TABLE catalogue_isbn (
    cat_call_no CHAR(30) NOT NULL,
    isbn_no     NUMBER(13) NOT NULL
);

COMMENT ON COLUMN catalogue_isbn.cat_call_no IS
    'Call number of the catalogue that contains Dewey Decimal Classification.';

COMMENT ON COLUMN catalogue_isbn.isbn_no IS
    'Unique ISBN number.';

ALTER TABLE catalogue_isbn ADD CONSTRAINT catalogue_author_pkv1 PRIMARY KEY ( cat_call_no,
                                                                              isbn_no );

CREATE TABLE catalogue_subject (
    cat_call_no CHAR(30) NOT NULL,
    subject_id  NUMBER(4) NOT NULL
);

COMMENT ON COLUMN catalogue_subject.cat_call_no IS
    'Call number of the catalogue that contains Dewey Decimal Classification.';

COMMENT ON COLUMN catalogue_subject.subject_id IS
    'Unique identifier of the subject.';

ALTER TABLE catalogue_subject ADD CONSTRAINT catalogue_author_pkv2 PRIMARY KEY ( cat_call_no,
                                                                                 subject_id );

CREATE TABLE isbn (
    isbn_no   NUMBER(13) NOT NULL,
    isbn_type CHAR(1) NOT NULL
);

ALTER TABLE isbn
    ADD CONSTRAINT isbn_type CHECK ( isbn_type IN ( 'H', 'P' ) );

COMMENT ON COLUMN isbn.isbn_no IS
    'Unique ISBN number.';

COMMENT ON COLUMN isbn.isbn_type IS
    'Type of book relating to the ISBN.';

ALTER TABLE isbn ADD CONSTRAINT isbn_pk PRIMARY KEY ( isbn_no );

CREATE TABLE loan (
    loan_id              NUMBER(7) NOT NULL,
    loan_borrow_datetime DATE NOT NULL,
    loan_return_datetime DATE,
    borrower_no          NUMBER(4) NOT NULL,
    book_copy_id         NUMBER(4) NOT NULL,
    loan_due_back_date   DATE NOT NULL,
    branch_code          NUMBER(3) NOT NULL,
    loan_fine_amnt       NUMBER(4, 2),
    loan_fine_paid_date  DATE
);

COMMENT ON COLUMN loan.loan_id IS
    'Loan identifier (surrogate key).';

COMMENT ON COLUMN loan.loan_borrow_datetime IS
    'Date and time of when book was loaned out.';

COMMENT ON COLUMN loan.loan_return_datetime IS
    'The date and time when the book is returned from being loaned out.';

COMMENT ON COLUMN loan.borrower_no IS
    'Unique identifier of the borrower.';

COMMENT ON COLUMN loan.book_copy_id IS
    'Unique identifier of a book copy in a branch.';

COMMENT ON COLUMN loan.loan_due_back_date IS
    'Planned loan return date.';

COMMENT ON COLUMN loan.branch_code IS
    'Unique identifier of the LGA branch.';

COMMENT ON COLUMN loan.loan_fine_amnt IS
    'Amount to fine borrower for a late book loan return.';

COMMENT ON COLUMN loan.loan_fine_paid_date IS
    'The date borrower paid the late return fine.';

ALTER TABLE loan ADD CONSTRAINT loan_pk PRIMARY KEY ( loan_id );

ALTER TABLE loan
    ADD CONSTRAINT loan_uq UNIQUE ( loan_borrow_datetime,
                                    borrower_no,
                                    book_copy_id );

CREATE TABLE local_government_agency (
    lga_code          NUMBER(4) NOT NULL,
    lga_name          VARCHAR2(50) NOT NULL,
    lga_size_hectares NUMBER(4, 2) NOT NULL,
    lga_contact_name  VARCHAR2(50) NOT NULL,
    lga_contact_phone CHAR(10) NOT NULL
);

COMMENT ON COLUMN local_government_agency.lga_code IS
    'Unique identifier of the Local Government Agency.';

COMMENT ON COLUMN local_government_agency.lga_name IS
    'Name of the Local Govenment Agency.';

COMMENT ON COLUMN local_government_agency.lga_size_hectares IS
    'Size of the Local Government Agency main location.';

COMMENT ON COLUMN local_government_agency.lga_contact_name IS
    'Service contact''s name of the Local Government Agency.';

COMMENT ON COLUMN local_government_agency.lga_contact_phone IS
    'Service contact''s phone number of the Local Government Agency.';

ALTER TABLE local_government_agency ADD CONSTRAINT local_government_agency_pk PRIMARY KEY ( lga_code );

CREATE TABLE manager (
    manager_id       NUMBER(4) NOT NULL,
    manager_phone    CHAR(10) NOT NULL,
    manager_fname    VARCHAR2(50) NOT NULL,
    manager_lname    VARCHAR2(50) NOT NULL,
    home_branch_code NUMBER(3) NOT NULL
);

COMMENT ON COLUMN manager.manager_id IS
    'Unique identifier of the manager.';

COMMENT ON COLUMN manager.manager_phone IS
    'Phone number of the manager.';

COMMENT ON COLUMN manager.manager_fname IS
    'First name of the manager.';

COMMENT ON COLUMN manager.manager_lname IS
    'Last name of the manager.';

COMMENT ON COLUMN manager.home_branch_code IS
    'Unique identifier of the LGA branch.';

CREATE UNIQUE INDEX manager__idx ON
    manager (
        home_branch_code
    ASC );

ALTER TABLE manager ADD CONSTRAINT manager_pk PRIMARY KEY ( manager_id );

CREATE TABLE publisher (
    publisher_id   NUMBER(4) NOT NULL,
    publisher_name VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN publisher.publisher_id IS
    'Unique identifier of the publisher.';

COMMENT ON COLUMN publisher.publisher_name IS
    'Business name of the publisher.';

ALTER TABLE publisher ADD CONSTRAINT publisher_pk PRIMARY KEY ( publisher_id );

CREATE TABLE reserve (
    reserve_datetime DATE NOT NULL,
    reserve_phone    CHAR(10) NOT NULL,
    book_copy_id     NUMBER(4) NOT NULL,
    branch_code      NUMBER(3) NOT NULL
);

COMMENT ON COLUMN reserve.reserve_datetime IS
    'Date and time when borrower reserves book.';

COMMENT ON COLUMN reserve.reserve_phone IS
    'Phone number of the borrower.';

COMMENT ON COLUMN reserve.book_copy_id IS
    'Unique identifier of a book copy in a branch.';

COMMENT ON COLUMN reserve.branch_code IS
    'Unique identifier of the LGA branch.';

ALTER TABLE reserve
    ADD CONSTRAINT reserve_pk PRIMARY KEY ( book_copy_id,
                                            branch_code,
                                            reserve_datetime );

CREATE TABLE subject (
    subject_id   NUMBER(4) NOT NULL,
    subject_desc VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN subject.subject_id IS
    'Unique identifier of the subject.';

COMMENT ON COLUMN subject.subject_desc IS
    'Description of the subject.';

ALTER TABLE subject ADD CONSTRAINT subject_pk PRIMARY KEY ( subject_id );

ALTER TABLE catalogue_author
    ADD CONSTRAINT author_a_catalogue_pk FOREIGN KEY ( author_id )
        REFERENCES author ( author_id );

ALTER TABLE borrower
    ADD CONSTRAINT b_class_borrower_fk FOREIGN KEY ( class_id )
        REFERENCES borrower_class ( class_id );

ALTER TABLE loan
    ADD CONSTRAINT bookcopy_loan_fk FOREIGN KEY ( book_copy_id,
                                                  branch_code )
        REFERENCES book_copy ( book_copy_id,
                               branch_code );

ALTER TABLE borrower
    ADD CONSTRAINT borrower_branch_fk FOREIGN KEY ( branch_code )
        REFERENCES agency_branch ( branch_code );

ALTER TABLE loan
    ADD CONSTRAINT borrower_loan_fk FOREIGN KEY ( borrower_no )
        REFERENCES borrower ( borrower_no );

ALTER TABLE book_copy
    ADD CONSTRAINT branch_book_fk FOREIGN KEY ( branch_code )
        REFERENCES agency_branch ( branch_code );

ALTER TABLE catalogue_isbn
    ADD CONSTRAINT cat_catalogue_isbn FOREIGN KEY ( cat_call_no )
        REFERENCES catalogue ( cat_call_no );

ALTER TABLE catalogue_subject
    ADD CONSTRAINT cat_catalogue_subject FOREIGN KEY ( cat_call_no )
        REFERENCES catalogue ( cat_call_no );

ALTER TABLE catalogue_author
    ADD CONSTRAINT catalogue_author_relation FOREIGN KEY ( cat_call_no )
        REFERENCES catalogue ( cat_call_no );

ALTER TABLE book_copy
    ADD CONSTRAINT catalogue_bookcopy_fk FOREIGN KEY ( cat_call_no )
        REFERENCES catalogue ( cat_call_no );

ALTER TABLE catalogue_isbn
    ADD CONSTRAINT isbn_catalogue_isbn_pk FOREIGN KEY ( isbn_no )
        REFERENCES isbn ( isbn_no );

ALTER TABLE agency_branch
    ADD CONSTRAINT lga_agencybranch_fk FOREIGN KEY ( lga_code )
        REFERENCES local_government_agency ( lga_code );

ALTER TABLE agency_branch
    ADD CONSTRAINT manager_agencybranch_fk FOREIGN KEY ( manager_id )
        REFERENCES manager ( manager_id );

ALTER TABLE catalogue
    ADD CONSTRAINT publisher_catalogue_fk FOREIGN KEY ( publisher_id )
        REFERENCES publisher ( publisher_id );

ALTER TABLE manager
    ADD CONSTRAINT relation_17 FOREIGN KEY ( home_branch_code )
        REFERENCES agency_branch ( branch_code );

ALTER TABLE reserve
    ADD CONSTRAINT reserve_book_copy_pk FOREIGN KEY ( book_copy_id,
                                                      branch_code )
        REFERENCES book_copy ( book_copy_id,
                               branch_code );

ALTER TABLE catalogue_subject
    ADD CONSTRAINT subject_catalogue_subject_pk FOREIGN KEY ( subject_id )
        REFERENCES subject ( subject_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            16
-- CREATE INDEX                             2
-- ALTER TABLE                             41
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0


SPOOL off
set echo off